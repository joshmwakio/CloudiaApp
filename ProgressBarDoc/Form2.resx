<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuProgressBar1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAATkAAAAQCAYAAABtNQi7AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAFmSURBVHhe7dsxTsMwGIbhjoyMHIEjMDJyDEZGRkYOwMTA
        JZDYWFkRU24AQgLR2JGiEjsgUH9jww+hYNQ1Lu8nPWqlxh4/2Y09IYSQf5WbENZMJ/vWy3lkrQ8BAMZF
        bOPkIn4/tI9hU+treWwXtq2TW+Pl2brcxAAwDubrU2bGyZHW2N+pnezEdpz9nAgAxk+6uEC7SjtRrbTF
        pB9sLw/5wQAwfrWbP8UeO9ZaW0ztwkFswdfcQAAoh7RTL1tabUPSH3if+1sAKFovp1ptQ4yXPvswAJTG
        ybVW2xDDVhXACtFqGxL3sVXuQQAoj1ittiFNLyeciwNQuvRuIb1j0Gobkg4BGy9tbhAAlCIWXFe7sKvV
        thjr5Mx085fcQAAog1Raab/zfmfVyT1FB6BEsb/u4ipuQystn7YN62lFlw7U5SYBgLFpvPi0gltacN+T
        7rHGVryMuMsKYJQ+zvdKNfWyp9WVyWTyBjHqfDnuVp7oAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="bunifuLabel1.BaseStylesheet" xml:space="preserve">
    <value>#bunifu-label { padding: 0px; font-family: 'Comic Sans MS'; font-size: 9pt; width: 100%; height: 100%; font-style: normal; font-weight: normal; text-decoration: none; color: rgb(128, 128, 128); text-align: left; }</value>
  </data>
  <data name="bunifuProgressBar2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAE5CAYAAACZJ6ArAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAGYSURBVHhe7dwxSgNBFIfxlJaWHsEjWFp6DEtLS0sPYGXh
        JQQ7W1uxyg0UQTHZCSxxZ1ZR8sb5TzYm4gQTSCXfwIdF5v0m5gCvt/HzEONW1dixC3adcmrk7caFeOpe
        4253rXxcE/edt8cq2LvzMaahXPX918aVt7Pu+s8z9HaQXhvPhpZnTXrkTt+0G51+bdfaS3ngd0M/eUv3
        z7txvR5PkvpZurw8qwfB9jKgH2n2f65Va5cZSD9OW7zwV97uM1D8cMUAABQAgAIAUAAACgBAAQAoAAAF
        AKAAABQAgAIAUAAACgBAAQAoAAAFAKAAABQAgAIAUAAACgBAAQAoAAAFAKAAABQAgAIAUAAACgBAAQAo
        AAAFAKAAABQAgAIAUAAACmBTQLX2kq15GXDB+qUP/85cBkatXSxuJ1slbfbShq8MaM1ZFawuXVxWGm6G
        Ph5mQMd5u6qayUfpcjnrd6PTkze1eXteBUn3ntLrO93o/NR13NY30Sqz0uAoWNDLxeHFo+1t6ZXbVN7g
        Nt1mZv1BsKPuyv85vd4XDeF8Of2a4TQAAAAASUVORK5CYII=
</value>
  </data>
  <data name="bunifuLabel2.BaseStylesheet" xml:space="preserve">
    <value>#bunifu-label { padding: 0px; font-family: 'Comic Sans MS'; font-size: 9pt; width: 100%; height: 100%; font-style: normal; font-weight: normal; text-decoration: none; color: rgb(128, 128, 128); text-align: left; }</value>
  </data>
</root>